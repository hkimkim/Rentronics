{"ast":null,"code":"var _jsxFileName = \"/Users/heekyungkim/rentronics/src/Rentronics/components/admin/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as authService from \"../../services/auth-service.js\";\nimport * as service from \"../../services/user-service.js\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  let loggedIn = useSelector(state => state.loggedIn);\n  let currentUser = useSelector(state => state.currentUser);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [users, setUsers] = useState([]);\n  let userRoles = new Array(users.length);\n  let items = new Array(users.length).fill(true);\n  const [select, setSelected] = useState(items);\n\n  const getUsers = async () => {\n    try {\n      const currentUser = await authService.profile();\n      const listOfUsers = await service.findAllUsers();\n      setUsers(listOfUsers);\n      userRoles = listOfUsers.map(user => user.userType);\n      console.log(userRoles);\n    } catch (e) {\n      setUsers();\n    }\n  };\n\n  useEffect(() => {\n    if (!loggedIn && currentUser.userType !== \"admin\") {\n      navigate('/login');\n    } else {\n      getUsers();\n    }\n  }, []);\n\n  const onClick = async index => {\n    console.log(\"clicked!\", index);\n    let cloneSelect = [...select];\n    cloneSelect[index] = !cloneSelect[index];\n    setSelected(cloneSelect); // update user\n\n    const updatedUser = await service.updateUser(users[index]._id, users[index]);\n    dispatch({\n      type: \"SET_CURRENT_USER\",\n      currentUser\n    });\n    alert(users[index].firstName + \"'s role has been updated!\");\n  };\n\n  const updateButton = index => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary\",\n      onClick: () => onClick(index),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  };\n\n  const updateUserRoles = (e, index) => {\n    let temp_state = [...users];\n    let temp_element = { ...temp_state[index]\n    };\n    temp_element.userType = e.target.value;\n    temp_state[index] = temp_element;\n    setUsers(temp_state);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-1 col-md-1 col-lg-2 col-xl-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-9 col-md-9 col-lg-8 col-xl-8 px-5 py-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manage Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"FirstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"LastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map((user, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  class: \"form-select\",\n                  \"aria-label\": \"Default select example\",\n                  value: users[i].userType,\n                  onChange: e => updateUserRoles(e, i),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"buyer\",\n                    children: \"Buyer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"seller\",\n                    children: \"Seller\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"admin\",\n                    children: \"Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: updateButton(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-1 col-md-1 col-lg-2 col-xl-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"OTnWPPF4hCrlmrdJnYOhvdYxFV0=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useNavigate","authService","service","useDispatch","Admin","loggedIn","state","currentUser","navigate","dispatch","users","setUsers","userRoles","Array","length","items","fill","select","setSelected","getUsers","profile","listOfUsers","findAllUsers","map","user","userType","console","log","e","onClick","index","cloneSelect","updatedUser","updateUser","_id","type","alert","firstName","updateButton","updateUserRoles","temp_state","temp_element","target","value","i","lastName","email"],"sources":["/Users/heekyungkim/rentronics/src/Rentronics/components/admin/index.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport * as authService from \"../../services/auth-service.js\"\nimport * as service from \"../../services/user-service.js\";\nimport { useDispatch } from \"react-redux\";\n\n\nconst Admin = () => {\n  let loggedIn = useSelector(state => state.loggedIn);\n  let currentUser = useSelector(state => state.currentUser);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [users, setUsers] = useState([]);\n  let userRoles = new Array(users.length);\n  let items = new Array(users.length).fill(true);\n\n  const [select, setSelected] = useState(items);\n\n  const getUsers = async () => {\n    try{\n      const currentUser = await authService.profile();\n\n      const listOfUsers = await service.findAllUsers();\n      setUsers(listOfUsers);\n      userRoles = listOfUsers.map(user => user.userType);\n      console.log(userRoles);\n      \n\n    } catch (e) {\n      setUsers();\n    }\n  }\n\n\nuseEffect(() => {\n  if (!loggedIn && currentUser.userType !== \"admin\") {\n    navigate('/login')\n  } else {\n    getUsers();\n  }  \n}, []);\n\n\n\n  const onClick = async (index) => {\n    console.log(\"clicked!\", index);\n    let cloneSelect = [...select];\n    cloneSelect[index] = !cloneSelect[index];\n    setSelected(cloneSelect);\n\n    // update user\n    const updatedUser = await service.updateUser(users[index]._id, users[index]);\n\n    dispatch({\n      type: \"SET_CURRENT_USER\",\n      currentUser\n    })\n\n\n    alert(users[index].firstName + \"'s role has been updated!\")\n\n  }\n\n\n  const updateButton = (index) => {\n    return (\n      <button type=\"button\" \n        class=\"btn btn-outline-primary\" \n        onClick={() => onClick(index)}>\n        Update\n      </button>\n    );\n  };\n\n  const updateUserRoles = (e, index) => {\n    let temp_state = [...users];\n    \n    let temp_element = { ...temp_state[index] };\n    \n    temp_element.userType = e.target.value;\n    \n    temp_state[index] = temp_element;\n    \n    setUsers( temp_state );\n\n  }\n\n\n  return (\n    <div className=\"container my-5\">\n      <div className=\"row\">\n        \n        <div className=\"col-sm-1 col-md-1 col-lg-2 col-xl-2\"></div>\n        <div className=\"col-sm-9 col-md-9 col-lg-8 col-xl-8 px-5 py-2\">\n            <h3>Manage Users</h3>\n\n            <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\"></th>\n                    <th scope=\"col\">FirstName</th>\n                    <th scope=\"col\">LastName</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Role</th>\n                    <th scope=\"col\">Update</th>\n\n                  </tr>\n                </thead>\n                <tbody>\n                    {\n                      users.map( (user, i) => \n                      \n                      <tr>\n                      <th scope=\"row\">{i + 1}</th>\n                      <td>{user.firstName}</td>\n                      <td>{user.lastName}</td>\n                      <td>{user.email}</td>\n                      <td>\n                        <select class=\"form-select\" aria-label=\"Default select example\" value={users[i].userType} onChange={(e) => updateUserRoles(e, i)}>\n                            <option value=\"buyer\">Buyer</option>\n                            <option value=\"seller\">Seller</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                      </td>\n                      <td>\n                      {updateButton(i)}\n                      </td>\n                    </tr>                  \n                    )\n                  }\n               </tbody>\n\n            </table>\n        \n        </div>\n        <div className=\"col-sm-1 col-md-1 col-lg-2 col-xl-2\"></div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Admin"],"mappings":"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"},"metadata":{},"sourceType":"module"}